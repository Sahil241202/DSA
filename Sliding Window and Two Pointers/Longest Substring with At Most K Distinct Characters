// QUESTION:
You are given a string 'str' and an integer ‘K’. Your task is to find the length of the largest substring with at most ‘K’ distinct characters.
For example:
You are given ‘str’ = ‘abbbbbbc’ and ‘K’ = 2, then the substrings that can be formed are [‘abbbbbb’, ‘bbbbbbc’]. Hence the answer is 7.
//

SOLUTION: TC = O(N)  SC = O(K)

#include<unordered_map>
int kDistinctChars(int k, string &str)
{
        unordered_map<int,int> mp;
        int count = 0;
        int i = 0;
        int j = 0;
        while(j<str.size()){
            mp[str[j]]++;
            while(mp.size()>k){
                auto it = mp.find(str[i]);
                it->second--;
                if(it->second==0) mp.erase(it);
                i++;
            }
            count = max(count,j-i+1);
            j++;
        }
        return count;
}


