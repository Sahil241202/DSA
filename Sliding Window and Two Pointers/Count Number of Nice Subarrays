// QUESTION:

Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.

Return the number of nice sub-arrays.
//

SOLUTION:

class Solution {
    int atmost(vector<int>& nums,int goal){
        int n = nums.size();
        int sum = 0;
        int ans = 0;
        int l = 0;
        for(int i=0;i<n && l<n;i++){
            sum+=nums[i];
            while(sum>goal && l<=i){
                sum = sum - nums[l];
                l++;
            }
            ans += (i-l+1);
        }
        return ans;
    }
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> ans(n);
        for(int i=0;i<n;i++){
            if(nums[i]&1){
                ans[i] = 1;
            }
            else{
                ans[i] = 0;
            }
        }
        return atmost(ans,k) - atmost(ans,k-1);
    }
};
