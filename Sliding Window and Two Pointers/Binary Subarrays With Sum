//QUESTION: 
Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.

A subarray is a contiguous part of the array
//

SOLUTION:
class Solution {
    int atmost(vector<int>& nums,int goal){
        int n = nums.size();
        int sum = 0;
        int ans = 0;
        int l = 0;
        for(int i=0;i<n && l<n;i++){
            sum+=nums[i];
            while(sum>goal && l<=i){
                sum = sum - nums[l];
                l++;
            }
            ans += (i-l+1);
        }
        return ans;
    }

public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        return atmost(nums,goal) - atmost(nums,goal-1);
    }
};
