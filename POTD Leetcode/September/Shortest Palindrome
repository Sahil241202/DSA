//QUESTION: 
You are given a string s. You can convert s to a 
palindrome by adding characters in front of it.
Return the shortest palindrome you can find by performing this transformation.
//

SOLUTION: USING KMP [ TC = O(N) , SC = O(N) ]

class Solution {
public:
    string shortestPalindrome(string s) {
        string str = "";
        int n = s.length();
        if (n == 0)
            return s;

        for(int i=0;i<n;i++){
            str+=s[i];
        }
        str+='#';
        string rev_str = s;
        reverse(rev_str.begin(), rev_str.end());

        for(int i=0;i<n;i++){
            str+=rev_str[i];
        }

        vector<int> lps(str.length(),0);
        int i = 0,j = 1;
        while(j<str.length()){
            if(str[i]==str[j]){
                i++;
                lps[j] = i;
                j++;
            }
            else{
                if(i==0) j++;
                else i = lps[i-1];
            }
        }
        string rhs = s.substr(lps[str.length()-1]);
        reverse(rhs.begin(),rhs.end());
        s = rhs + s;
        return s;
    }
};
